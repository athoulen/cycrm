<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd 
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

	<!-- By the spring of transaction management mybatis -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="edit*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="set*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="execute*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="bind*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置哪些类的方法需要进行事务管理 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allManagerMethod"
			expression="execution(* com.blueair.service..*.*(..)) " />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod" />
	</aop:config>
	
	<bean id="cacheRefresher" class="com.blueair.aop.CacheRefresher"/>
	<aop:config>
       <aop:pointcut expression="execution(public * com.blueair.service.impl.*.update*(..))" id="updatePointcut"/>
       <aop:pointcut expression="execution(public * com.blueair.service.impl.*.add*(..))" id="addPointcut"/>
       <aop:pointcut expression="execution(public * com.blueair.service.impl.*.insert*(..))" id="insertPointcut"/>
       <aop:pointcut expression="execution(public * com.blueair.service.impl.*.del*(..))" id="delPointcut"/>
       <aop:aspect id="cacheAspect" ref="cacheRefresher">
			<aop:after-returning pointcut-ref="updatePointcut" method="refreshCacheMap" />
			<aop:after-returning pointcut-ref="addPointcut" method="refreshCacheMap" />
			<aop:after-returning pointcut-ref="insertPointcut" method="refreshCacheMap" />
			<aop:after-returning pointcut-ref="delPointcut" method="refreshCacheMap" />
       </aop:aspect>
 	</aop:config>
</beans>
